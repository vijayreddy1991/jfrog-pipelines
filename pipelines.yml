resources:
  - name: repo
    type: GitRepo
    configuration:
      gitProvider: github
      path: vijayreddy1991/jfrog-pipelines
      files:  # optional
        include: pipelines.yml
        exclude: readme
      branches:  # optional
        include: master
        exclude: git
#       tags:  # optional
#         include: 
#         exclude: 
      buildOn:  # optional
         commit: false
         pullRequestCreate: false
         pullRequestClose: false
         releaseCreate: false
         tagCreate: false
      shallowDepth: 10  # optional 
      
pipelines:
  - name: jfrog_pipeline
#     configuration:
#       environmentVariables:
#         readOnly:
#           ENV1: value1
#           ENV2: value2    
#       runtime:       
#         type: image       #<image/host>
#         image:
#           auto:
#             language: go
#             versions:
#               - 1.12.5
#           custom:
#             name: drydock/u18node
#             tag: master
#             registry: <private custom image registry integration>
#             sourceRepository: <artifactory source repo>
#             region: <aws ECR region> 
#             options:
    steps:
      - name: test1
        type: Bash
        configuration:
          affinityGroup: debain 
          priority: 0
          timeoutSeconds: 50000
          nodePool: ubuntu_16
          chronological: true
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: keys
#             - name: artifactoryIntegration  
          inputResources:
            - name: repo
              trigger: true    # default true
#           outputResources:
#             - name: myOutputResource1  
#           runtime:       
#             type: image       #<image/host>
#             image:
#               auto:
#                 language: go
#                 versions:
#                   - 1.12.5
#               custom:
#                 name: drydock/u16node
#                 tag: master
#                 registry: art
#                 sourceRepository: docker # required if registry is artifactory
#                 region: <string> # required if registry is AWS
#                 options:
        execution:
          onExecute:
            - echo "test1"  
            - echo "$vijay"
            - printenv
            - sudo apt-get update
            - sudo apt-get install wget unzip
            - wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip
            - sudo unzip ./terraform_0.11.13_linux_amd64.zip -d /usr/local/bin/
            - terraform --version
            - terraform init
            - pwd
            - terraform apply -auto-approve
                
      - name: test2
        type: Bash
        configuration:
          affinityGroup: debain 
          priority: 0
          timeoutSeconds: 50000
          nodePool: ubuntu_16
          chronological: true
          environmentVariables:
            env1: value1
            env2: value2
#           integrations:
#             - name: dockerHubIntegration
#             - name: artifactoryIntegration  
          inputSteps:
            - name: test1
#           inputResources:
#             - name: vijay_git
#               trigger: true    # default true
#           outputResources:
#             - name: myOutputResource1  
          runtime:       
            type: image       #<image/host>
            image:
              auto:
                language: go
                versions:
                  - 1.12.5
#               custom:
#                 name: drydock/u16node
#                 tag: master
#                 registry: art
#                 sourceRepository: docker # required if registry is artifactory
#                 region: <string> # required if registry is AWS
#                 options:
        execution:
          onExecute:
            - echo "test2"  
            - printenv

      - name: test3
        type: Bash
        configuration:
          affinityGroup: rpm
          priority: 0
          timeoutSeconds: 50000
          nodePool: ubuntu_16
          chronological: true
          environmentVariables:
            env1: value1
            env2: value2
#           integrations:
#             - name: dockerHubIntegration
#             - name: artifactoryIntegration  
          inputSteps:
            - name: test2
#           inputResources:
#             - name: vijay_git
#               trigger: true    # default true
#           outputResources:
#             - name: myOutputResource1  
          runtime:       
            type: image       #<image/host>
            image:
              auto:
                language: go
                versions:
                  - 1.12.5
#               custom:
#                 name: drydock/u16node
#                 tag: master
#                 registry: art
#                 sourceRepository: docker # required if registry is artifactory
#                 region: <string> # required if registry is AWS
#                 options:
        execution:
          onExecute:
            - echo "Test3"
            - printenv

      - name: test4
        type: Bash
        configuration:
          affinityGroup: rpm
          priority: 0
          timeoutSeconds: 50000
          nodePool: ubuntu_16
          chronological: true
          environmentVariables:
            env1: value1
            env2: value2
#           integrations:
#             - name: dockerHubIntegration
#             - name: artifactoryIntegration  
          inputSteps:
            - name: test3
#           inputResources:
#             - name: vijay_git
#               trigger: true    # default true
#           outputResources:
#             - name: myOutputResource1  
          runtime:       
            type: image       #<image/host>
            image:
              auto:
                language: go
                versions:
                  - 1.12.5
#               custom:
#                 name: drydock/u16node
#                 tag: master
#                 registry: art
#                 sourceRepository: docker # required if registry is artifactory
#                 region: <string> # required if registry is AWS
#                 options:
        execution:
          onExecute:
            - echo "test4"  
            - printenv
              
